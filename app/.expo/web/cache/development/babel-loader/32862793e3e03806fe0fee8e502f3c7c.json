{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Camera } from \"expo-camera\";\nimport { useRef, useState, StyleSheet } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport 'App.css';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _Camera$useCameraPerm = Camera.useCameraPermissions(),\n      _Camera$useCameraPerm2 = _slicedToArray(_Camera$useCameraPerm, 2),\n      status = _Camera$useCameraPerm2[0],\n      requestPermission = _Camera$useCameraPerm2[1];\n\n  var _useState = useState(Camera.Constants.Type.back),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastPhotoURI = _useState4[0],\n      setLastPhotoURI = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photoSentURI = _useState6[0],\n      setPhotoSentURI = _useState6[1];\n\n  var cameraRef = useRef(null);\n\n  if (!(status != null && status.granted)) {\n    return _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignContent: \"center\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"We need access to your camera\"\n      }), _jsx(Button, {\n        onPress: requestPermission,\n        title: \"Grant permission\"\n      })]\n    });\n  }\n\n  if (lastPhotoURI !== null) {\n    return _jsxs(ImageBackground, {\n      source: {\n        uri: lastPhotoURI\n      },\n      style: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          flex: 0.2,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#666\",\n          marginBottom: 40,\n          marginLeft: 20\n        },\n        onPress: function onPress() {\n          setPhotoSentURI(lastPhotoURI);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30,\n            padding: 10,\n            color: \"white\"\n          },\n          children: \"\\u2B06\\uFE0F\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          flex: 0.2,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#666\",\n          marginBottom: 40,\n          marginLeft: 20\n        },\n        onPress: function onPress() {\n          setLastPhotoURI(null);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30,\n            padding: 10,\n            color: \"white\"\n          },\n          children: \"\\u274C\"\n        })\n      })]\n    });\n  }\n\n  return _jsx(Camera, {\n    style: {\n      flex: 1\n    },\n    type: type,\n    ref: cameraRef,\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: {\n          flex: 0.2,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#666\",\n          marginBottom: 40,\n          marginLeft: 20\n        },\n        onPress: function onPress() {\n          setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30,\n            padding: 10,\n            color: \"white\"\n          },\n          children: \"\\uD83D\\uDD04\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: {\n          flex: 0.2,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#666\",\n          marginBottom: 40,\n          marginLeft: 20\n        },\n        onPress: function _callee() {\n          var photo;\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  if (!cameraRef.current) {\n                    _context.next = 5;\n                    break;\n                  }\n\n                  _context.next = 3;\n                  return _regeneratorRuntime.awrap(cameraRef.current.takePictureAsync());\n\n                case 3:\n                  photo = _context.sent;\n                  setLastPhotoURI(photo.uri);\n\n                case 5:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        children: _jsx(Text, {\n          style: {\n            fontSize: 30,\n            padding: 10,\n            color: \"white\"\n          },\n          children: \"\\u26AA\\uFE0F\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/boaz/Documents/Semester8/capstone/capstone-Bsharp-app/app/App.js"],"names":["Camera","useRef","useState","StyleSheet","App","useCameraPermissions","status","requestPermission","Constants","Type","back","type","setType","lastPhotoURI","setLastPhotoURI","photoSentURI","setPhotoSentURI","cameraRef","granted","flex","justifyContent","alignContent","textAlign","uri","backgroundColor","flexDirection","alignSelf","alignItems","marginBottom","marginLeft","fontSize","padding","color","front","current","takePictureAsync","photo"],"mappings":"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","sourcesContent":["import { Camera } from \"expo-camera\";\nimport { useRef, useState, StyleSheet } from \"react\";\nimport {\n  Button,\n  ImageBackground,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport 'App.css'\n\nexport default function App() {\n  // Camera permissions array stored in status\n  const [status, requestPermission] = Camera.useCameraPermissions();\n\n  // State for the type of camera\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  // State for the location of the last photo\n  const [lastPhotoURI, setLastPhotoURI] = useState(null);\n\n  // State for result of sending image to backend\n  const [photoSentURI, setPhotoSentURI] = useState(null);\n\n  // Reference to the camera\n  const cameraRef = useRef(null);\n\n\n  if (!status?.granted) { // If status not granted, ask for it\n    return (\n      <View\n        style={{ flex: 1, justifyContent: \"center\", alignContent: \"center\" }}\n      >\n        <Text style={{ textAlign: \"center\" }}>\n          We need access to your camera\n        </Text>\n        <Button onPress={requestPermission} title=\"Grant permission\" />\n      </View>\n    );\n  }\n\n  if (lastPhotoURI !== null) { // If a picture is taken, display the picture with a back button\n    return (\n      <ImageBackground\n        source={{ uri: lastPhotoURI }}\n        style={{\n          flex: 1,\n          backgroundColor: \"transparent\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n      <TouchableOpacity\n        style={{\n          flex: 0.2,\n          alignSelf: \"flex-end\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          backgroundColor: \"#666\",\n          marginBottom: 40,\n          marginLeft: 20,\n        }}\n        onPress={() => {\n          setPhotoSentURI(lastPhotoURI);\n        }}\n      >\n        <Text style={{ fontSize: 30, padding: 10, color: \"white\" }}>⬆️</Text>\n      </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            flex: 0.2,\n            alignSelf: \"flex-end\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#666\",\n            marginBottom: 40,\n            marginLeft: 20,\n          }}\n          onPress={() => {\n            setLastPhotoURI(null); // Clear the photo\n          }}\n        >\n          <Text style={{ fontSize: 30, padding: 10, color: \"white\" }}>❌</Text>\n        </TouchableOpacity>\n      </ImageBackground>\n    );\n  }\n\n  // View for taking a picture - display the preview, a switch camera button, and a shutter button\n  return (\n    <Camera style={{ flex: 1 }} type={type} ref={cameraRef}>\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"transparent\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n        <TouchableOpacity\n          style={{\n            flex: 0.2,\n            alignSelf: \"flex-end\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#666\",\n            marginBottom: 40,\n            marginLeft: 20,\n          }}\n          onPress={() => {\n            setType(\n              type === Camera.Constants.Type.back\n                ? Camera.Constants.Type.front\n                : Camera.Constants.Type.back\n            );\n          }}\n        >\n          <Text style={{ fontSize: 30, padding: 10, color: \"white\" }}>🔄</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={{\n            flex: 0.2,\n            alignSelf: \"flex-end\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: \"#666\",\n            marginBottom: 40,\n            marginLeft: 20,\n          }}\n          onPress={async () => {\n            if (cameraRef.current) {\n              let photo = await cameraRef.current.takePictureAsync();\n              setLastPhotoURI(photo.uri);\n            }\n          }}\n        >\n          <Text style={{ fontSize: 30, padding: 10, color: \"white\" }}>⚪️</Text>\n        </TouchableOpacity>\n      </View>\n    </Camera>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}