{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Camera } from \"expo-camera\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useRef, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Background } from \"react-native-web/dist/index\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport styles from \"./Styles.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _Camera$useCameraPerm = Camera.useCameraPermissions(),\n      _Camera$useCameraPerm2 = _slicedToArray(_Camera$useCameraPerm, 2),\n      status = _Camera$useCameraPerm2[0],\n      requestPermission = _Camera$useCameraPerm2[1];\n\n  var _useState = useState(Camera.Constants.Type.back),\n      _useState2 = _slicedToArray(_useState, 2),\n      type = _useState2[0],\n      setType = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lastPhotoURI = _useState4[0],\n      setLastPhotoURI = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photoSentURI = _useState6[0],\n      setPhotoSentURI = _useState6[1];\n\n  var cameraRef = useRef(null);\n\n  if (!(status != null && status.granted)) {\n    return _jsxs(View, {\n      style: styles.View,\n      children: [_jsx(Text, {\n        style: styles.Text,\n        children: \"We need access to your camera\"\n      }), _jsx(Button, {\n        onPress: requestPermission,\n        title: \"Grant permission\"\n      })]\n    });\n  }\n\n  if (lastPhotoURI !== null) {\n    return _jsxs(ImageBackground, {\n      style: styles.ImageBackground,\n      source: {\n        uri: lastPhotoURI\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: styles.TouchableOpacity,\n        onPress: function onPress() {\n          setPhotoSentURI(lastPhotoURI);\n        },\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"\\u2B06\\uFE0F\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.TouchableOpacity,\n        onPress: function onPress() {\n          setLastPhotoURI(null);\n        },\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"\\u274C\"\n        })\n      })]\n    });\n  }\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [9, 16],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setLastPhotoURI(result.uri);\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(Camera, {\n    style: styles.Camera,\n    type: type,\n    ref: cameraRef,\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        backgroundColor: \"transparent\",\n        flexDirection: \"row\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        style: styles.TouchableOpacity,\n        onPress: function onPress() {\n          setType(type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back);\n        },\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"\\uD83D\\uDD04\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.TouchableOpacity,\n        onPress: function _callee() {\n          var photo;\n          return _regeneratorRuntime.async(function _callee$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!cameraRef.current) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  _context2.next = 3;\n                  return _regeneratorRuntime.awrap(cameraRef.current.takePictureAsync());\n\n                case 3:\n                  photo = _context2.sent;\n                  setLastPhotoURI(photo.uri);\n\n                case 5:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        },\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"\\u26AA\\uFE0F\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.TouchableOpacity,\n        onPress: pickImage,\n        children: _jsx(Text, {\n          style: styles.button,\n          children: \"\\uD83D\\uDCD4\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"sources":["/Users/boaz/Documents/Semester8/capstone/capstone-Bsharp-app/app/App.js"],"names":["Camera","ImagePicker","React","useRef","useState","Background","styles","App","useCameraPermissions","status","requestPermission","Constants","Type","back","type","setType","lastPhotoURI","setLastPhotoURI","photoSentURI","setPhotoSentURI","cameraRef","granted","View","Text","ImageBackground","uri","TouchableOpacity","button","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","console","log","cancelled","flex","backgroundColor","flexDirection","justifyContent","front","current","takePictureAsync","photo"],"mappings":"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","sourcesContent":["import { Camera } from \"expo-camera\";\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useRef, useState } from \"react\";\nimport {\n  Button,\n  Image,\n  ImageBackground,\n  Text,\n  TouchableOpacity,\n  View,\n  Background,\n  Platform,\n  StyleSheet\n} from \"react-native\";\n\nimport styles from './Styles.js'\n\nexport default function App() {\n  // Camera permissions array stored in status\n  const [status, requestPermission] = Camera.useCameraPermissions();\n\n  // State for the type of camera\n  const [type, setType] = useState(Camera.Constants.Type.back);\n\n  // State for the location of the last photo\n  const [lastPhotoURI, setLastPhotoURI] = useState(null);\n\n  // State for result of sending image to backend\n  const [photoSentURI, setPhotoSentURI] = useState(null);\n\n  // Reference to the camera\n  const cameraRef = useRef(null);\n\n\n\n  if (!status?.granted) { // If status not granted, ask for it\n    return (\n      <View style={styles.View}>\n        <Text style={styles.Text}>\n          We need access to your camera\n        </Text>\n        <Button onPress={requestPermission} title=\"Grant permission\" />\n      </View>\n    );\n  }\n\n  if (lastPhotoURI !== null) { // If a picture is taken or selected, display the picture with a back button\n    return (\n      <ImageBackground style={styles.ImageBackground}\n      source={{ uri: lastPhotoURI }}>\n      <TouchableOpacity style={styles.TouchableOpacity}\n        onPress={() => {\n          setPhotoSentURI(lastPhotoURI);\n        }}\n      >\n        <Text style={styles.button}>⬆️</Text>\n      </TouchableOpacity>\n        <TouchableOpacity style={styles.TouchableOpacity}\n        onPress={() => {\n            setLastPhotoURI(null); // Clear the photo\n          }}\n        >\n          <Text style={styles.button}>❌</Text>\n        </TouchableOpacity>\n      </ImageBackground>\n    );\n  }\n\n  // Image picker function\n  // Need to change aspect ratio\n  const pickImage = async () => {\n    // No permissions request is necessary for launching image library\n    let result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      aspect: [9,16],\n      quality: 1,\n    });\n\n    console.log(result);\n\n    if (!result.cancelled) {\n      setLastPhotoURI(result.uri);\n    }\n  }\n\n\n  // View for taking a picture - display the preview, a switch camera button, a pick image button, and a shutter button\n  return (\n    <Camera style={styles.Camera} type={type} ref={cameraRef}>\n      <View\n        style={{\n          flex: 1,\n          backgroundColor: \"transparent\",\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n        }}\n      >\n\n        <TouchableOpacity style={styles.TouchableOpacity}\n          onPress={() => {\n            setType(\n              type === Camera.Constants.Type.back\n                ? Camera.Constants.Type.front\n                : Camera.Constants.Type.back\n            );\n          }}\n        >\n          <Text style={styles.button}>🔄</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.TouchableOpacity}\n          onPress={async () => {\n            if (cameraRef.current) {\n              let photo = await cameraRef.current.takePictureAsync();\n              setLastPhotoURI(photo.uri);\n            }\n          }}\n        >\n          <Text style={styles.button}>⚪️</Text>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.TouchableOpacity}\n          onPress={pickImage}\n        >\n          <Text style={styles.button}>📔</Text>\n        </TouchableOpacity>\n      </View>\n    </Camera>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}